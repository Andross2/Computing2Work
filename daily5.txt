/***********************************************************
Author: Andrew Watts
Date: 9/24/2017
Effort: 
Purpose: 
***********************************************************/
#include <stdio.h>
void set_flag(unsigned flag_holder[], int flag_position);
void unset_flag(unsigned int flag_holder[], int flag_position);
int check_flag(unsigned int flag_holder[], int flag_position);
void display_32_flags_as_array(unsigned int flag_holder);
void display_flags(unsigned int flag_holder[], int size);

int main(int argc, char* argv[])
{
	unsigned int flag_holder[5] = { 0 };

	set_flag(flag_holder, 3);
	set_flag(flag_holder, 16);
	set_flag(flag_holder, 31);
	set_flag(flag_holder, 87);

	display_flags(flag_holder, 5);
	printf("\n\n");

	unset_flag(flag_holder, 31);
	unset_flag(flag_holder, 3);
	set_flag(flag_holder, 99);
	set_flag(flag_holder, 100);

	display_flags(flag_holder, 5);
	return 0;
}
void set_flag(unsigned flag_holder[], int flag_position)
{
	*flag_holder = (*flag_holder) | (1 << flag_position);
}
void unset_flag(unsigned int flag_holder[], int flag_position)
{
	//*flag_holder = (*flag_holder) | (0 << flag_position);
	*flag_holder = (*flag_holder) ^ (1 << flag_position);//^ used XOR operator
}
int check_flag(unsigned int flag_holder[], int flag_position)
{
	if ((flag_holder[1 << flag_position] == 0))
	{
		return 0;
	}
	return 1;

}

void display_32_flags_as_array(unsigned int flag_holder)
{
	for (int i = 31; i >= 0; i--)
	{
		printf("%d", check_flag(flag_holder, i));
		if (i % 4 == 0)
		{
			printf(" ");
		}
	}
	printf("\n");
}

void display_flags(unsigned int flag_holder[], int size)
{
	for (int i = 31; i >= 0; i--)
	{
		printf("%d", check_flag(flag_holder, i));
		if (i % 4 == 0)
		{
			printf(" ");
		}
	}
	printf("\n");
}